# OKE (Oracle Kubernetes Engine) cluster configuration

services:
  file-manager:
    enabled: true
  llm-client:
    enabled: true
  search-manager:
    enabled: true
  smart-manager:
    enabled: true

file-manager:
  replicaCount: 1
  image:
    repository: ghcr.io/beaverhouse/tinyclover-file-manager
    pullPolicy: IfNotPresent
    tag: "5d6b6d4f"
  imagePullSecrets:
    - name: ghcr-secret
  nameOverride: "file-manager"
  fullnameOverride: "file-manager"
  serviceAccount:
    create: false
  service:
    type: ClusterIP
    api:
      port: 8082
    mcp:
      enabled: false
  resources:
    limits:
      cpu: 50m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 128Mi
  autoscaling:
    enabled: false
  livenessProbe:
    httpGet:
      path: /file-manager/v1/health
      port: api
    periodSeconds: 120
  readinessProbe:
    httpGet:
      path: /file-manager/v1/health
      port: api
    periodSeconds: 120
  externalSecret:
    enabled: true
    data:
      - secretKey: "POSTGRES_HOST"
        remoteRef:
          key: "SUPABASE_POSTGRES_HOST"
      - secretKey: "POSTGRES_USER"
        remoteRef:
          key: "SUPABASE_POSTGRES_USER"
      - secretKey: "POSTGRES_PASSWORD"
        remoteRef:
          key: "SUPABASE_POSTGRES_PASSWORD"
      - secretKey: "S3_ENDPOINT"
        remoteRef:
          key: "SUPABASE_PUBLIC_S3_ENDPOINT"
      - secretKey: "S3_ACCESS_KEY"
        remoteRef:
          key: "SUPABASE_PUBLIC_S3_ACCESS_KEY"
      - secretKey: "S3_SECRET_KEY"
        remoteRef:
          key: "SUPABASE_PUBLIC_S3_SECRET_KEY"
      - secretKey: "S3_BUCKET_NAME"
        remoteRef:
          key: "SUPABASE_PUBLIC_S3_BUCKET_NAME"
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
      external-dns.alpha.kubernetes.io/hostname: "api.tinyclover.com"
      external-dns.alpha.kubernetes.io/set-identifier: "oke-cluster"
      external-dns.alpha.kubernetes.io/aws-weight: "50"
    hosts:
      - host: api.tinyclover.com
        paths:
          - path: /file-manager/v1
            pathType: Prefix
    tls:
      - secretName: file-manager-tls
        hosts:
          - api.tinyclover.com
  envFrom:
    - secretRef:
        name: file-manager-secret
  extraEnv:
    - name: GO_ENV
      value: "production"

llm-client:
  replicaCount: 1
  image:
    repository: ghcr.io/beaverhouse/tinyclover-llm-client
    pullPolicy: IfNotPresent
    tag: "7e1d50d4"
  imagePullSecrets:
    - name: ghcr-secret
  nameOverride: "llm-client"
  fullnameOverride: "llm-client"
  serviceAccount:
    create: false
  service:
    type: ClusterIP
    api:
      port: 5050
    mcp:
      enabled: false
  resources:
    limits:
      cpu: 50m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 128Mi
  autoscaling:
    enabled: false
  livenessProbe:
    httpGet:
      path: /v1/health
      port: api
    periodSeconds: 120
  readinessProbe:
    httpGet:
      path: /v1/health
      port: api
    periodSeconds: 120
  externalSecret:
    enabled: true
    data:
      - secretKey: "POSTGRES_HOST"
        remoteRef:
          key: "SUPABASE_POSTGRES_HOST"
      - secretKey: "POSTGRES_USER"
        remoteRef:
          key: "SUPABASE_POSTGRES_USER"
      - secretKey: "POSTGRES_PASSWORD"
        remoteRef:
          key: "SUPABASE_POSTGRES_PASSWORD"
      - secretKey: "SUPABASE_JWT_KEYFUNC_URL"
        remoteRef:
          key: "SUPABASE_JWT_KEYFUNC_URL"
      - secretKey: "GEMINI_API_KEY"
        remoteRef:
          key: "GEMINI_API_KEY"
      - secretKey: "OPENAI_API_KEY"
        remoteRef:
          key: "OPENAI_API_KEY"
      - secretKey: "CLAUDE_API_KEY"
        remoteRef:
          key: "ANTHROPIC_API_KEY"
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
      external-dns.alpha.kubernetes.io/hostname: "llm.tinyclover.com"
      external-dns.alpha.kubernetes.io/set-identifier: "oke-cluster"
      external-dns.alpha.kubernetes.io/aws-weight: "50"
    hosts:
      - host: llm.tinyclover.com
        paths:
          - path: /v1
            pathType: Prefix
    tls:
      - secretName: llm-client-tls
        hosts:
          - llm.tinyclover.com
  envFrom:
    - secretRef:
        name: llm-client-secret
  extraEnv:
    - name: GO_ENV
      value: "production"

search-manager:
  replicaCount: 2
  image:
    repository: ghcr.io/beaverhouse/tinyclover-search-manager
    pullPolicy: IfNotPresent
    tag: "424b9781"
  imagePullSecrets:
    - name: ghcr-secret
  nameOverride: "search-manager"
  fullnameOverride: "search-manager"
  serviceAccount:
    create: false
  service:
    type: ClusterIP
    api:
      port: 8082
    mcp:
      enabled: true
      port: 8102
  resources:
    limits:
      cpu: 50m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 128Mi
  autoscaling:
    enabled: false
  livenessProbe:
    httpGet:
      path: /search-manager/v1/health
      port: api
    periodSeconds: 120
  readinessProbe:
    httpGet:
      path: /search-manager/v1/health
      port: api
    periodSeconds: 120
  externalSecret:
    enabled: true
    data:
      - secretKey: "POSTGRES_HOST"
        remoteRef:
          key: "SUPABASE_POSTGRES_HOST"
      - secretKey: "POSTGRES_USER"
        remoteRef:
          key: "SUPABASE_POSTGRES_USER"
      - secretKey: "POSTGRES_PASSWORD"
        remoteRef:
          key: "SUPABASE_POSTGRES_PASSWORD"
      - secretKey: "SUPABASE_JWT_KEYFUNC_URL"
        remoteRef:
          key: "SUPABASE_JWT_KEYFUNC_URL"
      - secretKey: "NAVER_CLIENT_ID"
        remoteRef:
          key: "NAVER_CLIENT_ID"
      - secretKey: "NAVER_CLIENT_SECRET"
        remoteRef:
          key: "NAVER_CLIENT_SECRET"
      - secretKey: "BRAVE_SEARCH_API_KEY"
        remoteRef:
          key: "BRAVE_SEARCH_API_KEY"
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
      external-dns.alpha.kubernetes.io/set-identifier: "oke-cluster"
      external-dns.alpha.kubernetes.io/aws-weight: "50"
    hosts:
      - host: api.tinyclover.com
        paths:
          - path: /search-manager/v1
            pathType: Prefix
    tls:
      - secretName: search-manager-tls
        hosts:
          - api.tinyclover.com
  envFrom:
    - secretRef:
        name: search-manager-secret
  extraEnv:
    - name: GO_ENV
      value: "production"
    - name: MCP_BASE_URL
      value: "http://search-manager.tiny-clover.svc.cluster.local:8102/search-manager/v1"
    - name: MCP_TRANSPORT
      value: "http"

smart-manager:
  replicaCount: 1
  image:
    repository: ghcr.io/beaverhouse/tinyclover-smart-manager
    pullPolicy: IfNotPresent
    tag: "ba41dec3"
  imagePullSecrets:
    - name: ghcr-secret
  nameOverride: "smart-manager"
  fullnameOverride: "smart-manager"
  serviceAccount:
    create: false
  service:
    type: ClusterIP
    api:
      port: 8083
    mcp:
      enabled: true
      port: 8103
  resources:
    limits:
      cpu: 50m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 128Mi
  autoscaling:
    enabled: false
  livenessProbe:
    httpGet:
      path: /smart-manager/v1/health
      port: api
    periodSeconds: 120
  readinessProbe:
    httpGet:
      path: /smart-manager/v1/health
      port: api
    periodSeconds: 120
  externalSecret:
    enabled: true
    data:
      - secretKey: "POSTGRES_HOST"
        remoteRef:
          key: "SUPABASE_POSTGRES_HOST"
      - secretKey: "POSTGRES_USER"
        remoteRef:
          key: "SUPABASE_POSTGRES_USER"
      - secretKey: "POSTGRES_PASSWORD"
        remoteRef:
          key: "SUPABASE_POSTGRES_PASSWORD"
      - secretKey: "SUPABASE_JWT_KEYFUNC_URL"
        remoteRef:
          key: "SUPABASE_JWT_KEYFUNC_URL"
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
      external-dns.alpha.kubernetes.io/set-identifier: "oke-cluster"
      external-dns.alpha.kubernetes.io/aws-weight: "50"
    hosts:
      - host: api.tinyclover.com
        paths:
          - path: /smart-manager/v1
            pathType: Prefix
    tls:
      - secretName: smart-manager-tls
        hosts:
          - api.tinyclover.com
  envFrom:
    - secretRef:
        name: smart-manager-secret
  extraEnv:
    - name: GO_ENV
      value: "production"
    - name: MCP_BASE_URL
      value: "http://smart-manager.tiny-clover.svc.cluster.local:8103/smart-manager/v1"
    - name: MCP_TRANSPORT
      value: "http"
