replicaCount: 1

image:
  repository: ghcr.io/beaverhouse/aecheck-backend
  pullPolicy: IfNotPresent
  tag: "sha-65ccc1a"

imagePullSecrets:
  - name: ghcr-secret

nameOverride: "aecheck-backend"
fullnameOverride: "aecheck-backend"

serviceAccount:
  create: false

service:
  type: ClusterIP
  api:
    port: 5050
  mcp:
    enabled: false
    port: 3000

resources:
  limits:
    cpu: 50m
    memory: 256Mi
  requests:
    cpu: 10m
    memory: 128Mi

autoscaling:
  enabled: false

# Health check configuration
livenessProbe:
  httpGet:
    path: /aecheck/dungeon
    port: api
  periodSeconds: 90

readinessProbe:
  httpGet:
    path: /aecheck/dungeon
    port: api
  periodSeconds: 90

# ExternalSecret configuration
externalSecret:
  enabled: true
  data:
    - secretKey: "POSTGRES_HOST"
      remoteRef:
        key: "SUPABASE_POSTGRES_HOST"
    - secretKey: "POSTGRES_PORT"
      remoteRef:
        key: "SUPABASE_POSTGRES_PORT"
    - secretKey: "POSTGRES_USER"
      remoteRef:
        key: "SUPABASE_POSTGRES_USER"
    - secretKey: "POSTGRES_PASSWORD"
      remoteRef:
        key: "SUPABASE_POSTGRES_PASSWORD"
    - secretKey: "POSTGRES_DBNAME"
      remoteRef:
        key: "SUPABASE_POSTGRES_DBNAME"

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    external-dns.alpha.kubernetes.io/hostname: "v1.api.haulrest.me"
  hosts:
    - host: v1.api.haulrest.me
      paths:
        - path: /aecheck
          pathType: Prefix
  tls:
    - secretName: aecheck-backend-tls
      hosts:
        - v1.api.haulrest.me

# Custom deployment configuration for environment variables
envFrom:
  - secretRef:
      name: aecheck-backend-secret
